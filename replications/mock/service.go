// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/influxdata/influxdb/v2 (interfaces: ReplicationService)

// Package mock is a generated GoMock package.
package mock

import (
	"context"
	"reflect"

	"github.com/golang/mock/gomock"
	"github.com/influxdata/influxdb/v2"
	"github.com/influxdata/influxdb/v2/kit/platform"
)

// MockReplicationService is a mock of ReplicationService interface.
type MockReplicationService struct {
	ctrl     *gomock.Controller
	recorder *MockReplicationServiceMockRecorder
}

// MockReplicationServiceMockRecorder is the mock recorder for MockReplicationService.
type MockReplicationServiceMockRecorder struct {
	mock *MockReplicationService
}

// NewMockReplicationService creates a new mock instance.
func NewMockReplicationService(ctrl *gomock.Controller) *MockReplicationService {
	mock := &MockReplicationService{ctrl: ctrl}
	mock.recorder = &MockReplicationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReplicationService) EXPECT() *MockReplicationServiceMockRecorder {
	return m.recorder
}

// CreateReplication mocks base method.
func (m *MockReplicationService) CreateReplication(arg0 context.Context, arg1 influxdb.CreateReplicationRequest) (*influxdb.Replication, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateReplication", arg0, arg1)
	ret0, _ := ret[0].(*influxdb.Replication)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateReplication indicates an expected call of CreateReplication.
func (mr *MockReplicationServiceMockRecorder) CreateReplication(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateReplication", reflect.TypeOf((*MockReplicationService)(nil).CreateReplication), arg0, arg1)
}

// DeleteReplication mocks base method.
func (m *MockReplicationService) DeleteReplication(arg0 context.Context, arg1 platform.ID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteReplication", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteReplication indicates an expected call of DeleteReplication.
func (mr *MockReplicationServiceMockRecorder) DeleteReplication(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteReplication", reflect.TypeOf((*MockReplicationService)(nil).DeleteReplication), arg0, arg1)
}

// GetReplication mocks base method.
func (m *MockReplicationService) GetReplication(arg0 context.Context, arg1 platform.ID) (*influxdb.Replication, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReplication", arg0, arg1)
	ret0, _ := ret[0].(*influxdb.Replication)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReplication indicates an expected call of GetReplication.
func (mr *MockReplicationServiceMockRecorder) GetReplication(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReplication", reflect.TypeOf((*MockReplicationService)(nil).GetReplication), arg0, arg1)
}

// ListReplications mocks base method.
func (m *MockReplicationService) ListReplications(arg0 context.Context, arg1 influxdb.ReplicationListFilter) (*influxdb.Replications, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListReplications", arg0, arg1)
	ret0, _ := ret[0].(*influxdb.Replications)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListReplications indicates an expected call of ListReplications.
func (mr *MockReplicationServiceMockRecorder) ListReplications(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListReplications", reflect.TypeOf((*MockReplicationService)(nil).ListReplications), arg0, arg1)
}

// UpdateReplication mocks base method.
func (m *MockReplicationService) UpdateReplication(arg0 context.Context, arg1 platform.ID, arg2 influxdb.UpdateReplicationRequest) (*influxdb.Replication, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateReplication", arg0, arg1, arg2)
	ret0, _ := ret[0].(*influxdb.Replication)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateReplication indicates an expected call of UpdateReplication.
func (mr *MockReplicationServiceMockRecorder) UpdateReplication(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateReplication", reflect.TypeOf((*MockReplicationService)(nil).UpdateReplication), arg0, arg1, arg2)
}

// ValidateNewReplication mocks base method.
func (m *MockReplicationService) ValidateNewReplication(arg0 context.Context, arg1 influxdb.CreateReplicationRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateNewReplication", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateNewReplication indicates an expected call of ValidateNewReplication.
func (mr *MockReplicationServiceMockRecorder) ValidateNewReplication(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateNewReplication", reflect.TypeOf((*MockReplicationService)(nil).ValidateNewReplication), arg0, arg1)
}

// ValidateReplication mocks base method.
func (m *MockReplicationService) ValidateReplication(arg0 context.Context, arg1 platform.ID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateReplication", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateReplication indicates an expected call of ValidateReplication.
func (mr *MockReplicationServiceMockRecorder) ValidateReplication(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateReplication", reflect.TypeOf((*MockReplicationService)(nil).ValidateReplication), arg0, arg1)
}

// ValidateUpdatedReplication mocks base method.
func (m *MockReplicationService) ValidateUpdatedReplication(arg0 context.Context, arg1 platform.ID, arg2 influxdb.UpdateReplicationRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateUpdatedReplication", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateUpdatedReplication indicates an expected call of ValidateUpdatedReplication.
func (mr *MockReplicationServiceMockRecorder) ValidateUpdatedReplication(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateUpdatedReplication", reflect.TypeOf((*MockReplicationService)(nil).ValidateUpdatedReplication), arg0, arg1, arg2)
}
