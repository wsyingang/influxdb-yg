// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/influxdata/influxdb/v2/remotes (interfaces: RemoteConnectionValidator)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	internal "github.com/influxdata/influxdb/v2/remotes/internal"
)

// MockRemoteConnectionValidator is a mock of RemoteConnectionValidator interface.
type MockRemoteConnectionValidator struct {
	ctrl     *gomock.Controller
	recorder *MockRemoteConnectionValidatorMockRecorder
}

// MockRemoteConnectionValidatorMockRecorder is the mock recorder for MockRemoteConnectionValidator.
type MockRemoteConnectionValidatorMockRecorder struct {
	mock *MockRemoteConnectionValidator
}

// NewMockRemoteConnectionValidator creates a new mock instance.
func NewMockRemoteConnectionValidator(ctrl *gomock.Controller) *MockRemoteConnectionValidator {
	mock := &MockRemoteConnectionValidator{ctrl: ctrl}
	mock.recorder = &MockRemoteConnectionValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRemoteConnectionValidator) EXPECT() *MockRemoteConnectionValidatorMockRecorder {
	return m.recorder
}

// ValidateRemoteConnectionHTTPConfig mocks base method.
func (m *MockRemoteConnectionValidator) ValidateRemoteConnectionHTTPConfig(arg0 context.Context, arg1 *internal.RemoteConnectionHTTPConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateRemoteConnectionHTTPConfig", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateRemoteConnectionHTTPConfig indicates an expected call of ValidateRemoteConnectionHTTPConfig.
func (mr *MockRemoteConnectionValidatorMockRecorder) ValidateRemoteConnectionHTTPConfig(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateRemoteConnectionHTTPConfig", reflect.TypeOf((*MockRemoteConnectionValidator)(nil).ValidateRemoteConnectionHTTPConfig), arg0, arg1)
}
